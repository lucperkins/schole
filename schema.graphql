schema {
  query: RootQueryType
  mutation: RootMutationType
}

"The core document type for Schole documentation"
type Document {
  "The document's unique identifier"
  id: ID!

  "The title for the document, e.g. 'Deployment Guide'"
  title: String!

  "A description for the document"
  description: String

  "The document's main markup content"
  content: String!

  "Key-value metadata associated with the document"
  metadata: Json

  "Descriptive tags for indexing the document"
  tags: [String]
}

input NewDocument {
  title: String!
  content: String!
  description: String
  metadata: Json
  tags: [String]
}

"The `Json` scalar type allows you to use arbitrary JSON data in Schole."
scalar Json

type RootMutationType {
  "Create a new document"
  createDocument(document: NewDocument!): Document

  "Delete a document"
  deleteDocument(id: ID!): Document
}

type RootQueryType {
  "Find documents via some combination of title, tags, or text query string"
  findDocuments(query: String, tags: [String], title: String): [Document]

  searchDocuments(query: String!): [Document]

  "Fetch a specific document by ID"
  getDocument(id: ID): Document
}
